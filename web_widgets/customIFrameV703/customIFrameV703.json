{
  "designerVersion" : "1.2.9",
  "id" : "customIFrameV703",
  "name" : "iFrameV703",
  "lastUpdate" : 1571381162378,
  "template" : "<!-- The custom widget template is defined here\n   - You can use standard HTML tags and AngularJS built-in directives, scope and interpolation system\n   - Custom widget properties defined on the right can be used as variables in a templates with properties.newProperty\n   - Functions exposed in the controller can be used with ctrl.newFunction()\n -->\n \n<iframe ng-src=\"{{ctrl.url}}\" style=\"{{properties.style}}\"></iframe>",
  "controller" : "/**\n * The controller is a JavaScript function that augments the AngularJS scope and exposes functions that can be used in the custom widget template\n * \n * Custom widget properties defined on the right can be used as variables in a controller with $scope.properties\n * To use AngularJS standard services, you must declare them in the main function arguments.\n * \n * You can leave the controller empty if you do not need it.\n */\nfunction ctrl($scope, $sce) {\n    this.url = $sce.trustAsResourceUrl($scope.properties.url);\n    var self = this;\n    \n    $scope.$watch(function(scope){\n       return $scope.properties.url;\n        \n    },function ( newValue, oldValue ){\n        self.url = $scope.properties.url;\n    });\n \n}",
  "custom" : true,
  "properties" : [ {
    "label" : "URL",
    "name" : "url",
    "type" : "text",
    "bond" : "expression"
  }, {
    "label" : "HTML Style",
    "name" : "style",
    "type" : "text",
    "defaultValue" : "width:100%;",
    "bond" : "expression"
  } ],
  "assets" : [ ],
  "requiredModules" : [ ],
  "type" : "widget",
  "hasHelp" : false
}